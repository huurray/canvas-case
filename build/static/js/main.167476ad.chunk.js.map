{"version":3,"sources":["stores/auth/slice.ts","stores/root.ts","stores/auth/useAuthRedux.ts","pages/Main/Header.tsx","pages/Main/data.ts","assets/imgs/make-circles.png","pages/Main/index.tsx","styles/ui/Header.tsx","styles/ui/Button.tsx","pages/MakeCircles/index.tsx","pages/MakeCircles/useMakeCircles.ts","styles/reset.ts","styles/theme.ts","App.tsx","index.tsx"],"names":["authSlice","createSlice","name","initialState","initialized","reducers","setInit","state","combineReducers","auth","authReducer","rootStore","configureStore","reducer","useAppSelector","useSelector","useAuthRedux","dispatch","useDispatch","actions","Header","Container","Title","Description","GithubDescription","href","styled","div","h1","theme","colors","grey700","p","grey500","a","grey600","data","backgroundImage","url","Main","letterHeight","window","innerWidth","navigate","useNavigate","authState","ref","useRef","useState","items","setItems","open","setOpen","transApi","useSpringRef","transitions","useTransition","from","opacity","height","innerHeight","transform","color","enter","leave","update","transNextApi","transition","trail","length","scale","useChain","useEffect","current","push","setTimeout","ListBox","style","item","className","onClick","src","alt","LetterBox","rest","overflow","CopyWright","whiteBackIcon","undefined","sizes","headerHeight","button","full","white","size","Button","MakeCircles","screenWidth","screenHeight","canvasRef","ctx","setCtx","animate","pointRef","x","y","r","g","b","Particle","dx","dy","ttl","timeToLive","randomColor","Math","floor","random","min","max","beginPath","arc","PI","strokeStyle","fillStyle","stroke","closePath","remove","Explosion","particles","randomVelocity","newParticle","draw","i","splice","explosions","onChangePoint","e","clientX","clientY","addEventListener","requestAnimationFrame","fillRect","newExplosion","useMakeCircles","canvas","context","getContext","width","init","reset","css","black","green","blue","red","orange","yellow","beige","gold","silver","bronze","grey100","grey200","grey300","grey400","grey800","App","store","styles","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.167476ad.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport interface IState {\n  initialized: boolean;\n}\n\nexport const initialState: IState = {\n  initialized: false,\n};\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setInit: (state) => {\n      state.initialized = true;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\n//stores\nimport authReducer from \"./auth/slice\";\n\nconst reducers = combineReducers({ auth: authReducer });\n\nexport const rootStore = configureStore({\n  reducer: reducers,\n});\n\nexport type IRootState = ReturnType<typeof rootStore.getState>;\nexport type IAppDispatch = typeof rootStore.dispatch;\n\nexport const useAppDispatch = () => useDispatch<IAppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<IRootState> = useSelector;\n","import { useAppDispatch, useAppSelector } from \"stores/root\";\nimport { authSlice } from \"stores/auth/slice\";\n\nexport default function useAuthRedux() {\n  const dispatch = useAppDispatch();\n  const auth = useAppSelector((state) => state.auth);\n\n  function setInit() {\n    dispatch(authSlice.actions.setInit());\n  }\n\n  return {\n    state: auth,\n    setInit,\n  };\n}\n","import styled from \"@emotion/styled\";\n// styles\nimport { GitHub } from \"react-feather\";\n\nfunction Header() {\n  return (\n    <Container>\n      <Title>CANVAS CASE.</Title>\n      <Description>\n        This is a collection of interactions using HTML5 Canvas that I made.\n        <br />\n        And it has been recreated with references from many places.\n      </Description>\n      <GithubDescription href=\"https://github.com/huurray/canvas-case\">\n        <GitHub />\n        <p>Link to Github.</p>\n      </GithubDescription>\n    </Container>\n  );\n}\n\nexport default Header;\n\nconst Container = styled.div`\n  padding: 6rem 4rem 4rem 4rem;\n`;\nconst Title = styled.h1`\n  font-size: 4rem;\n  color: ${({ theme }) => theme.colors.grey700};\n  font-weight: 800;\n  margin-bottom: 2rem;\n`;\nconst Description = styled.p`\n  font-size: 2.4rem;\n  color: ${({ theme }) => theme.colors.grey500};\n  line-height: 1.46;\n  margin-bottom: 3rem;\n`;\nconst GithubDescription = styled.a`\n  font-size: 2.2rem;\n  font-weight: 500;\n  color: ${({ theme }) => theme.colors.grey600};\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n\n  &:hover {\n    p {\n      text-decoration: underline;\n    }\n  }\n\n  svg {\n    width: 2rem;\n    height: 2rem;\n    margin-right: 0.4rem;\n    margin-top: -0.3rem;\n  }\n`;\n","// styles\nimport MakeCirclesImg from \"assets/imgs/make-circles.png\";\n\nexport const data = [\n  {\n    name: \"Make Circles\",\n    backgroundImage: MakeCirclesImg,\n    url: \"/make-circles\",\n  },\n];\n","export default __webpack_public_path__ + \"static/media/make-circles.d8363d5b.png\";","import { useEffect, useRef, useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useTransition, useChain, animated, useSpringRef } from \"@react-spring/web\";\n// redux\nimport useAuthRedux from \"stores/auth/useAuthRedux\";\n// components\nimport Header from \"./Header\";\nimport { data } from \"./data\";\n\nfunction Main() {\n  const letterHeight = window.innerWidth > 750 ? 70 : 40;\n\n  const navigate = useNavigate();\n  const { state: authState, setInit } = useAuthRedux();\n\n  const ref = useRef<ReturnType<typeof setTimeout>[]>([]);\n  const [items, setItems] = useState<string[]>([]);\n  const [open, setOpen] = useState(authState.initialized);\n\n  const transApi = useSpringRef();\n  const transitions = useTransition(items, {\n    ref: transApi,\n    from: {\n      opacity: 0,\n      height: 0,\n      innerHeight: 0,\n      transform: \"perspective(600px) rotateY(0deg)\",\n      color: \"#333333\",\n    },\n    enter: [\n      { opacity: 1, height: letterHeight, innerHeight: letterHeight },\n      { transform: \"perspective(600px) rotateY(60deg)\", color: \"#f26522\" },\n      { transform: \"perspective(600px) rotateY(0deg)\" },\n    ],\n    leave: [{ color: \"#8e8e8e\" }, { innerHeight: 0 }, { opacity: 0, height: 0 }],\n    update: [{ color: \"#f26522\" }],\n  });\n\n  const transNextApi = useSpringRef();\n  const transition = useTransition(open ? data : [], {\n    ref: transNextApi,\n    trail: 400 / data.length,\n    from: { opacity: 0, scale: 0 },\n    enter: { opacity: 1, scale: 1 },\n    leave: { opacity: 0, scale: 0 },\n  });\n\n  useChain(open ? [transApi, transNextApi] : [transNextApi, transApi], [0, open ? 0.1 : 0.6]);\n\n  useEffect(() => {\n    ref.current.push(setTimeout(() => setItems([\"Canvas\", \"Case\", \"By Huurray.\"]), 0));\n    ref.current.push(setTimeout(() => setItems([\"Canvas\", \"Case\"]), 1500));\n    setTimeout(() => {\n      setOpen(true);\n      setInit();\n    }, 4000);\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <Container>\n      {open ? (\n        <>\n          <Header />\n          <ListBox>\n            {transition((style, item) => (\n              <animated.div\n                className=\"item\"\n                style={{ ...style, height: window.innerHeight * 0.2 }}\n                onClick={() => navigate(item.url)}\n              >\n                <div className=\"name\">{item.name}</div>\n                <img src={item.backgroundImage} alt=\"이미지\" />\n              </animated.div>\n            ))}\n          </ListBox>\n        </>\n      ) : (\n        <LetterBox>\n          <div className=\"content\">\n            {transitions(({ innerHeight, ...rest }, item) => (\n              <animated.div className=\"item\" style={rest}>\n                <animated.div style={{ overflow: \"hidden\", height: innerHeight }}>\n                  {item}\n                </animated.div>\n              </animated.div>\n            ))}\n          </div>\n        </LetterBox>\n      )}\n      <CopyWright>© Copyright 2022 Huurray, All rights reserved.</CopyWright>\n    </Container>\n  );\n}\n\nexport default Main;\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n`;\nconst LetterBox = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  .content {\n    width: 37.5rem;\n  }\n\n  .item {\n    overflow: hidden;\n    width: 100%;\n    color: black;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    font-size: 6rem;\n    font-weight: 800;\n    text-transform: uppercase;\n    will-change: transform, opacity, height;\n    white-space: nowrap;\n  }\n`;\nconst ListBox = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 2.5rem;\n  padding: 0 4rem 4rem 4rem;\n  img {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    z-index: -1;\n  }\n  .item {\n    width: 100%;\n    height: 100%;\n    border-radius: 1rem;\n    will-change: transform, opacity;\n    cursor: pointer;\n    transition: 0.15s transform;\n    overflow: hidden;\n\n    &:hover {\n      transform: scale(1.03) !important;\n    }\n    .name {\n      margin: 1.5rem 2rem;\n      font-size: 2.2rem;\n      text-align: right;\n      color: ${({ theme }) => theme.colors.grey600};\n    }\n  }\n`;\nconst CopyWright = styled.div`\n  width: 100%;\n  position: absolute;\n  bottom: 2rem;\n  font-size: 1.5rem;\n  color: ${({ theme }) => theme.colors.grey500};\n  text-align: center;\n`;\n","/* eslint-disable */\nimport React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { useNavigate } from \"react-router\";\n// styles\nimport { ArrowLeft } from \"react-feather\";\n\ninterface IProps {\n  style?: React.CSSProperties;\n  whiteBackIcon?: boolean;\n}\nfunction Header({ whiteBackIcon, style }: IProps) {\n  const navigate = useNavigate();\n  return (\n    <Container style={style}>\n      <ArrowLeft\n        onClick={() => navigate(-1)}\n        style={{ color: whiteBackIcon ? \"#fff\" : undefined }}\n      />\n    </Container>\n  );\n}\n\nexport default Header;\n\nconst Container = styled.div`\n  background-color: unset;\n  height: ${({ theme }) => theme.sizes.headerHeight};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  svg {\n    height: 100%;\n    padding: 0 2rem;\n    cursor: pointer;\n  }\n`;\n","/* eslint-disable */\nimport React from \"react\";\nimport styled from \"@emotion/styled\";\n\ninterface IProps {\n  full?: boolean;\n  size?: \"medium\" | \"large\" | \"xLarge\";\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  [key: string]: any;\n}\nfunction Button({ full, size, style, children, ...props }: IProps) {\n  return (\n    <Container full={full} size={size} style={style} {...props}>\n      {children}\n    </Container>\n  );\n}\n\nexport default Button;\n\nconst Container = styled.button<{ size?: string; full?: boolean }>`\n  width: ${({ full }) => (full ? \"100%\" : \"fit-content\")};\n  background-color: red;\n  border-radius: 6px;\n  color: ${({ theme }) => theme.colors.white};\n  font-weight: bold;\n  cursor: pointer;\n  white-space: nowrap;\n\n  padding: ${({ size }) => {\n    switch (size) {\n      case \"xLarge\":\n        return \"0 20px\";\n      case \"large\":\n        return \"0 20px\";\n      default:\n        return \"0 16px\";\n    }\n  }};\n  height: ${({ size }) => {\n    switch (size) {\n      case \"xLarge\":\n        return \"60px\";\n      case \"large\":\n        return \"50px\";\n      default:\n        return \"36px\";\n    }\n  }};\n  font-size: ${({ size }) => {\n    switch (size) {\n      case \"xLarge\":\n        return \"18px\";\n      case \"large\":\n        return \"18px\";\n      default:\n        return \"12px\";\n    }\n  }};\n`;\n","import { useEffect, useRef, useState } from \"react\";\nimport styled from \"@emotion/styled\";\n// hooks\nimport useMakeCircles from \"./useMakeCircles\";\n// styles\nimport { Header } from \"styles/ui\";\n\nconst MakeCircles = () => {\n  const screenWidth = window.innerWidth;\n  const screenHeight = window.innerHeight;\n\n  const canvasRef = useRef<HTMLCanvasElement | any>(null);\n  const [ctx, setCtx] = useState<CanvasRenderingContext2D | null>(null);\n\n  const { animate } = useMakeCircles(ctx);\n\n  function init() {\n    if (!canvasRef?.current) return;\n\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    setCtx(context);\n\n    canvas.width = screenWidth;\n    canvas.height = screenHeight;\n  }\n\n  useEffect(() => {\n    if (!ctx) return;\n    animate();\n    // eslint-disable-next-line\n  }, [ctx]);\n\n  useEffect(() => {\n    init();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <Container>\n      <Header whiteBackIcon />\n      <canvas ref={canvasRef} />\n    </Container>\n  );\n};\n\nexport default MakeCircles;\n\nconst Container = styled.div`\n  canvas {\n    width: 100%;\n    height: 100%;\n  }\n`;\n","import { useEffect, useRef } from \"react\";\n\nexport default function useMakeCircles(ctx: CanvasRenderingContext2D | null) {\n  const screenWidth = window.innerWidth;\n  const screenHeight = window.innerHeight;\n\n  const pointRef = useRef({ x: screenWidth / 2, y: screenHeight / 2 });\n\n  let colors = [\n    { r: 255, g: 71, b: 71 },\n    { r: 0, g: 206, b: 237 },\n    { r: 255, g: 255, b: 255 },\n  ];\n\n  function Particle(x: number, y: number, dx: number, dy: number, r: number, ttl: number) {\n    let opacity = 1;\n    let timeToLive = ttl;\n    const randomColor = Math.floor(Math.random() * colors.length);\n\n    function update() {\n      if (!ctx) return;\n      x += dx;\n      y += dy;\n\n      if (x + r >= screenWidth || x - r <= 0) dx = -dx;\n      if (y + r >= screenHeight || y - r <= 0) dy = -dy;\n\n      x = Math.min(Math.max(x, 0 + r), screenWidth - r);\n      y = Math.min(Math.max(y, 0 + r), screenHeight - r);\n\n      ctx.beginPath();\n      ctx.arc(x, y, r, 0, Math.PI * 2, false);\n      ctx.strokeStyle =\n        \"rgba(\" +\n        colors[randomColor].r +\n        \",\" +\n        colors[randomColor].g +\n        \",\" +\n        colors[randomColor].b +\n        \",\" +\n        opacity +\n        \")\";\n      ctx.fillStyle =\n        \"rgba(\" +\n        colors[randomColor].r +\n        \",\" +\n        colors[randomColor].g +\n        \",\" +\n        colors[randomColor].b +\n        \",\" +\n        opacity +\n        \")\";\n      ctx.stroke();\n      ctx.closePath();\n\n      opacity -= 1 / (ttl / 0.1);\n      r -= r / (ttl / 0.1);\n\n      if (r < 0) r = 0;\n\n      timeToLive -= 0.1;\n    }\n\n    function remove() {\n      return timeToLive <= 0;\n    }\n\n    return { update, remove };\n  }\n\n  function Explosion(x: number, y: number) {\n    const particles: any = [];\n    const randomVelocity = {\n      x: (Math.random() - 0.5) * 3.5,\n      y: (Math.random() - 0.5) * 3.5,\n    };\n\n    const newParticle = new (Particle as any)(x, y, randomVelocity.x, randomVelocity.y, 60, 8);\n    particles.push(newParticle);\n\n    function draw() {\n      for (let i = 0; i < particles.length; i++) {\n        particles[i].update();\n\n        if (particles[i].remove()) {\n          particles.splice(i, 1);\n        }\n      }\n    }\n\n    return { draw };\n  }\n\n  let explosions: any = [];\n\n  function animate() {\n    if (!ctx) return;\n    window.requestAnimationFrame(animate);\n\n    ctx.fillStyle = \"#1e1e1e\";\n    ctx.fillRect(0, 0, screenWidth, screenHeight);\n\n    const newExplosion = new (Explosion as any)(pointRef.current.x, pointRef.current.y);\n    explosions.push(newExplosion);\n\n    for (let i = 0; i < explosions.length; i++) {\n      explosions[i].draw();\n    }\n  }\n\n  function onChangePoint(e) {\n    pointRef.current.x = e.clientX;\n    pointRef.current.y = e.clientY;\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"mousemove\", onChangePoint);\n    return () => window.addEventListener(\"mousemove\", onChangePoint);\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener(\"onClick\", onChangePoint);\n    return () => window.addEventListener(\"onClick\", onChangePoint);\n  }, []);\n\n  return {\n    animate,\n  };\n}\n","import { css } from \"@emotion/react\";\n\nconst reset = css`\n\t@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;500;700&display=swap');\n\n\thtml, body {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tfont-size: 10px;\n\t}\n\thtml, body, div, span, applet, object, iframe,\n\th1, h2, h3, h4, h5, h6, p, blockquote, pre,\n\ta, abbr, acronym, address, big, cite, code,\n\tdel, dfn, em, img, ins, kbd, q, s, samp,\n\tsmall, strike, strong, sub, sup, tt, var,\n\tb, u, i, center,\n\tdl, dt, dd, ol, ul, li,\n\tfieldset, form, label, legend,\n\ttable, caption, tbody, tfoot, thead, tr, th, td,\n\tarticle, aside, canvas, details, embed, \n\tfigure, figcaption, footer, header, hgroup, \n\tmenu, nav, output, ruby, section, summary,\n\ttime, mark, audio, video {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tborder: 0;\n\t\tvertical-align: baseline;\n\t}\n\tarticle, aside, details, figcaption, figure, \n\tfooter, header, hgroup, menu, nav, section {\n\t\tdisplay: block;\n\t}\n\tbody {\n\t\tline-height: 1;\n\t\toverflow: hidden;\n\t}\n\tbutton, input {\n\t\toutline: none;\n\t\tborder: none;\n\t\tbackground-color: unset;\n\t}\n\tol, ul {\n\t\tlist-style: none;\n\t}\n\tblockquote, q {\n\t\tquotes: none;\n\t}\n\tblockquote:before, blockquote:after,\n\tq:before, q:after {\n\t\tcontent: '';\n\t\tcontent: none;\n\t}\n\ttable {\n\t\tborder-collapse: collapse;\n\t\tborder-spacing: 0;\n\t}\n\ta {\n\t\tcolor: unset;\n\t\ttext-decoration: none; \n\t\toutline: none;\n\t}\n\t#root {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n\t@media all and (max-width: 750px) {\n\t\thtml { font-size: 6px; } \n\t}\n`;\n\nexport default reset;\n","const theme = {\n  sizes: {\n    headerHeight: \"60px\",\n  },\n  colors: {\n    white: \"#fff\",\n    black: \"#000\",\n    green: \"#83bc44\",\n    blue: \"#0081EC\",\n    red: \"#e14614\",\n    orange: \"#f26522\",\n    yellow: \"#faa61a\",\n    beige: \"#F2F3ED\",\n    gold: \"#F3CE6F\",\n    silver: \"#CFCFCF\",\n    bronze: \"#D7A088\",\n    grey100: \"#fafafa\",\n    grey200: \"#f8f8f8\",\n    grey300: \"#eeeeee\",\n    grey400: \"#dddddd\",\n    grey500: \"#bababe\",\n    grey600: \"#8e8e8e\",\n    grey700: \"#333333\",\n    grey800: \"#1d1c1d\",\n  },\n};\n\nexport default theme;\n","import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n// components\nimport Main from \"pages/Main\";\nimport MakeCircles from \"pages/MakeCircles\";\n// redux\nimport { rootStore } from \"stores/root\";\nimport { Provider } from \"react-redux\";\n// styles\nimport { Global, ThemeProvider } from \"@emotion/react\";\nimport reset from \"styles/reset\";\nimport theme from \"styles/theme\";\n\nconst App = () => (\n  <ThemeProvider theme={theme}>\n    <Provider store={rootStore}>\n      <Global styles={reset} />\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<Main />} />\n          <Route path=\"/make-circles\" element={<MakeCircles />} />\n        </Routes>\n      </Router>\n    </Provider>\n  </ThemeProvider>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}